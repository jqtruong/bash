#!/bin/bash
#
# Given a search, let's start with a method, trace all of its references, where
# it resides - e.g. if it's in a class,- where does that class reside, etc. so
# i can visually see the code architecture.
#
#
#



#########
# FUNCS #
#########

_pager() {
    local i=$1; ((i--))
    local ifs=$IFS; IFS=$':'
    read file lino foo <<< "${_results_raw[i]}"; IFS=$ifs
    $PAGER -c ":$lino" -c ":let @/='$_keyword' | set hlsearch" "$file"
    echo; _prompt
}

_prompt() {
    len=${#_results[@]}
    _log "results count: $len"

    if [[ $len > 0 ]]
    then
        local i=0
        for ((i=0; i<len; i++))
        do echo "$((i+1)). ${_results[i]}"
        done

        printf "View code? (1-${#_results[@]}) "; read i
        if [[ $i == "q" ]]
        then exit
        else _pager "$i"
        fi
    fi
}

_search() {
    _log "/$_regexp/"

    local ifs=$IFS; IFS=$'\n'
    _results_raw=($(ag "$_regexp"))
    _results=($(ag --color "$_regexp")); IFS=$ifs

    _prompt
}

#
# PROGRAMS #
#

commit() {

}

def() {
    _shift_argv;
    _keyword=$arg
    _regexp="^ *def +$arg"
    _search
}



#############
# INIT VARS #
#############

. .blang

_keyword=
_regexp=
_results=
_results_raw=

arg=
argc=$#
argv=("$@")


########
# MAIN #
########

_process
